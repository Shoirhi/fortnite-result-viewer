---
import BaseLayout from "@/layouts/BaseLayout.astro";
import StandingsSection from "@/components/standings/StandingsSection.astro";
import StandingsTable from "@/components/standings/StandingsTable.astro";
import {
    createMatchStandingsSummary,
    createStandingsSummary,
    parseTournamentResults,
} from "@/lib/standings-summary";
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";

type EventEntry = CollectionEntry<"events">;

type PageProps = {
    event: EventEntry;
    matchNumber: number;
};

export async function getStaticPaths() {
    const events = await getCollection(
        "events",
        ({ data }) => data.score != null,
    );

    return events.flatMap((event) => {
        const results = parseTournamentResults(event.data.score);
        const standings = createStandingsSummary(results);
        const matchCount = Math.max(standings.totalMatches, 1);

        return Array.from({ length: matchCount }, (_, index) => ({
            params: {
                eventId: event.id,
                matchNumber: `${index + 1}`,
            },
            props: {
                event,
                matchNumber: index + 1,
            },
        }));
    });
}

const { event, matchNumber } = Astro.props as PageProps;
const results = parseTournamentResults(event.data.score);
const summary = createMatchStandingsSummary(results, matchNumber);

const { matchStandings, totalTeams } = summary;
const hasStandings = totalTeams > 0;
const startPlacement = hasStandings ? 1 : 0;
const endPlacement = hasStandings ? totalTeams : 0;
const summaryLabel = summary.headingLabel;
const matchHeadingLabel =
    typeof summary.matchDisplayNumber === "number"
        ? `第${summary.matchDisplayNumber}試合`
        : summaryLabel;
const placementRangeLabel = `${startPlacement}位〜${endPlacement}位`;
const pageTitle = `フル | ${matchHeadingLabel} | ${event.data.title}`;
---

<BaseLayout title={pageTitle}>
    <StandingsSection
        summaryLabel={summaryLabel}
        placementRangeLabel={placementRangeLabel}
        totalTeams={totalTeams}
    >
        <StandingsTable entries={matchStandings} variant="match" />
    </StandingsSection>
</BaseLayout>
